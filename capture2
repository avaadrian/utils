# CONFIG
$serverIp = "172.16.0.99"
$interface = 4  # ‚Üê SETAT conform dumpcap -D
$outDir = "$PSScriptRoot\pcaps"

# CreeazƒÉ folderul pentru capturi
New-Item -Path $outDir -ItemType Directory -Force | Out-Null

# Func»õia care face captura + descƒÉrcarea
function Capture-And-Download {
    param (
        [string]$filename,
        [string]$label
    )

    $pcapFile = "$outDir\$label`_$filename.pcapng"
    $url = "http://$serverIp/$label/$filename"
    $tmpFile = "$env:TEMP\$filename"

    Write-Host "üì• [$label] Downloading $filename and capturing to $pcapFile"

    try {
        # Porne»ôte captura
        $dumpcap = Start-Process -FilePath "dumpcap.exe" `
            -ArgumentList "-i", "$interface", "-w", "$pcapFile" `
            -WindowStyle Hidden -PassThru

        Start-Sleep -Seconds 1

        # DescarcƒÉ fi»ôierul
        Invoke-WebRequest -Uri $url -OutFile $tmpFile -UseBasicParsing

        Start-Sleep -Seconds 1

        # Opre»ôte captura
        Stop-Process -Id $dumpcap.Id
        Write-Host "‚úÖ Capturat: $pcapFile`n"
    }
    catch {
        Write-Warning "‚ö†Ô∏è Eroare la $filename ($label): $_"
        if ($dumpcap) {
            Stop-Process -Id $dumpcap.Id -ErrorAction SilentlyContinue
        }
    }
}

# Cite»ôte listele
$benignList = Get-Content "$PSScriptRoot\benign.txt"
$maliciousList = Get-Content "$PSScriptRoot\malicious.txt"

# RuleazƒÉ pe fi»ôierele benigne
foreach ($f in $benignList) {
    if ($f.Trim()) { Capture-And-Download -filename $f.Trim() -label "benign" }
}

# RuleazƒÉ pe fi»ôierele maligne
foreach ($f in $maliciousList) {
    if ($f.Trim()) { Capture-And-Download -filename $f.Trim() -label "malicious" }
}
